= Skillet

An easy-to-deploy standalone Rack app with bundled Chef server and cookbooks.

== Rationale

Hey, wouldn't it be cool to run a Chef server on Heroku?

== Deployment

As a prerequisite, you'll need access to a CouchDB instance somehow somewhere. (As one option, see my hideabed[http://github.com/matthewtodd/hideabed]. I hear there's also http://hosting.couch.io.)

I happen to be using Heroku. Here's how you'd deploy there:

 git clone http://github.com/matthewtodd/skillet.git
 cd skillet
 # adjust cookbooks to your liking
 heroku create
 heroku config:add APP_ACCESS_TOKEN=acbd18db4cc2f85cedef654fccc4a4d8
 heroku config:add MERB_SESSION_SECRET_KEY=37b51d194a7513e45b56f6524f2d51f2
 heroku config:add CHEF_AUTHORIZED_OPENID_IDENTIFIERS=one.example.com,two.example.com
 heroku config:add CHEF_AUTHORIZED_OPENID_PROVIDERS=provider.example.com,another-provider.example.com
 heroku config:add CHEF_COUCHDB_URL=https://user:pass@couchdb-instance.example.com
 heroku config:add CHEF_OPENID_URL=https://acbd18db4cc2f85cedef654fccc4a4d8:X@curried-emu-12.heroku.com
 heroku config:add CHEF_VALIDATION_TOKEN=73feffa4b7f6bb68e44cf984c85f6e88
 heroku addons:add piggyback_ssl
 git push heroku master

Then, assuming your APP_ACCESS_TOKEN is "acbd18db4cc2f85cedef654fccc4a4d8" and your app is "curried-emu-12", give it a go with

 open https://acbd18db4cc2f85cedef654fccc4a4d8:X@curried-emu-12.heroku.com

You'll need to crank your dynos to 2 so that your Chef clients can register and authenticate themselves with OpenID.

== Notes

It would be great if Heroku[http://docs.heroku.com/constraints#git-submodules] supported[http://groups.google.com/group/heroku/browse_thread/thread/5e6807fcd2572f64/bee1a3b581db9c00] git submodules. Then we could pull in Opscode's cookbooks[http://github.com/opscode/cookbooks] instead of duplicating them.

And I've totally stubbed out Chef::Queue, so there's no search indexing. This hasn't been a big deal for me yet, as I'm dealing with a number of single-server environments. But I suppose you could either perform the search indexing in-process, or run it through Heroku's recently-added support for delayed_job. Either way, beware the Heroku constraints[http://docs.heroku.com/constraints#read-only-filesystem] and workarounds[http://docs.heroku.com/full-text-indexing].
